{"hash":"d06b72a745ef091be148dc7901e4668c7f4a64fd","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\nclass PixelService {\n    constructor(config, injectedDocument, platformId, router, rendererFactory) {\n        this.config = config;\n        this.injectedDocument = injectedDocument;\n        this.platformId = platformId;\n        this.router = router;\n        this.rendererFactory = rendererFactory;\n        // DOCUMENT cannot be injected directly as Document type, see https://github.com/angular/angular/issues/20351\n        // It is therefore injected as any and then cast to Document\n        this.doc = injectedDocument;\n        this.renderer = rendererFactory.createRenderer(null, null);\n        if (router) {\n            // Log page views after router navigation ends\n            router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n                if (this.isLoaded()) {\n                    this.track('PageView');\n                }\n            });\n        }\n    }\n    /**\n     * Initialize the Pixel tracking script\n     * - Adds the script to page's head\n     * - Tracks first page view\n     */\n    initialize(pixelId = this.config.pixelId) {\n        if (this.isLoaded()) {\n            console.warn('Tried to initialize a Pixel instance while another is already active. Please call `remove()` before initializing a new instance.');\n            return;\n        }\n        this.config.enabled = true;\n        this.addPixelScript(pixelId);\n    }\n    /** Remove the Pixel tracking script */\n    remove() {\n        this.removePixelScript();\n        this.config.enabled = false;\n    }\n    /**\n     * Track a Standard Event as predefined by Facebook\n     *\n     * See {@link https://developers.facebook.com/docs/facebook-pixel/reference Facebook Pixel docs - reference}\n     * @param eventName The name of the event that is being tracked\n     * @param properties Optional properties of the event\n     */\n    track(eventName, properties) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        if (!this.isLoaded()) {\n            console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n            return;\n        }\n        if (properties) {\n            fbq('track', eventName, properties);\n        }\n        else {\n            fbq('track', eventName);\n        }\n    }\n    /**\n     * Track a custom Event\n     *\n     * See {@link https://developers.facebook.com/docs/facebook-pixel/implementation/conversion-tracking#custom-conversions Facebook Pixel docs - custom conversions}\n     * @param eventName The name of the event that is being tracked\n     * @param properties Optional properties of the event\n     */\n    trackCustom(eventName, properties) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        if (!this.isLoaded()) {\n            console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n            return;\n        }\n        if (properties) {\n            fbq('trackCustom', eventName, properties);\n        }\n        else {\n            fbq('trackCustom', eventName);\n        }\n    }\n    /**\n     * Adds the Facebook Pixel tracking script to the application\n     * @param pixelId The Facebook Pixel ID to use\n     */\n    addPixelScript(pixelId) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const pixelCode = `\n    var pixelCode = function(f,b,e,v,n,t,s)\n    {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n    n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n    if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n    n.queue=[];t=b.createElement(e);t.async=!0;\n    t.src=v;s=b.getElementsByTagName(e)[0];\n    s.parentNode.insertBefore(t,s)}(window, document,'script',\n    'https://connect.facebook.net/en_US/fbevents.js');\n    fbq('init', '${pixelId}');\n    fbq('track', 'PageView');`;\n        const scriptElement = this.renderer.createElement('script');\n        this.renderer.setAttribute(scriptElement, 'id', 'pixel-script');\n        this.renderer.setAttribute(scriptElement, 'type', 'text/javascript');\n        this.renderer.setProperty(scriptElement, 'innerHTML', pixelCode);\n        this.renderer.appendChild(this.doc.head, scriptElement);\n    }\n    /** Remove Facebook Pixel tracking script from the application */\n    removePixelScript() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const pixelElement = this.doc.getElementById('pixel-script');\n        if (pixelElement) {\n            pixelElement.remove();\n        }\n    }\n    /** Checks if the script element is present */\n    isLoaded() {\n        if (isPlatformBrowser(this.platformId)) {\n            const pixelElement = this.doc.getElementById('pixel-script');\n            return !!pixelElement;\n        }\n        return false;\n    }\n}\nPixelService.ɵfac = function PixelService_Factory(t) { return new (t || PixelService)(i0.ɵɵinject('config'), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i1.Router, 8), i0.ɵɵinject(i0.RendererFactory2)); };\nPixelService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PixelService, factory: PixelService.ɵfac, providedIn: 'root' });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PixelService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: ['config']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: i1.Router, decorators: [{\n                type: Optional\n            }] }, { type: i0.RendererFactory2 }]; }, null); })();\n\nclass PixelModule {\n    constructor(pixel, platformId) {\n        this.pixel = pixel;\n        if (!PixelModule.config) {\n            throw Error('ngx-pixel not configured correctly. Pass the `pixelId` property to the `forRoot()` function');\n        }\n        if (PixelModule.config.enabled && isPlatformBrowser(platformId)) {\n            this.pixel.initialize();\n        }\n    }\n    /**\n     * Initiale the Facebook Pixel Module\n     *\n     * Add your Pixel ID as parameter\n     */\n    static forRoot(config) {\n        this.config = config;\n        const pixelId = config.pixelId;\n        this.verifyPixelId(pixelId);\n        return {\n            ngModule: PixelModule,\n            providers: [PixelService, { provide: 'config', useValue: config }]\n        };\n    }\n    /**\n     * Verifies the Pixel ID that was passed into the configuration.\n     * - Checks if Pixel was initialized\n     * @param pixelId Pixel ID to verify\n     */\n    static verifyPixelId(pixelId) {\n        // Have to verify first that all Pixel IDs follow the same 15 digit format\n        if (pixelId === null || pixelId === undefined || pixelId.length === 0) {\n            throw Error('Invalid Facebook Pixel ID. Did you pass the ID into the forRoot() function?');\n        }\n    }\n}\nPixelModule.config = null;\nPixelModule.ɵfac = function PixelModule_Factory(t) { return new (t || PixelModule)(i0.ɵɵinject(PixelService), i0.ɵɵinject(PLATFORM_ID)); };\nPixelModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PixelModule });\nPixelModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PixelModule, [{\n        type: NgModule,\n        args: [{\n                imports: [],\n            }]\n    }], function () { return [{ type: PixelService }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PixelModule, PixelService };\n//# sourceMappingURL=ngx-pixel.mjs.map\n","map":{"version":3,"file":"ngx-pixel.mjs","sources":["../../../projects/pixel/src/lib/pixel.service.ts","../../../projects/pixel/src/lib/pixel.module.ts","../../../projects/pixel/src/ngx-pixel.ts"],"sourcesContent":["import { PixelEventName, PixelConfiguration, PixelEventProperties } from './pixel.models';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, RendererFactory2 } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\ndeclare const fbq: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PixelService {\n\n  private doc: Document;\n  private renderer: Renderer2\n\n  constructor(\n    @Inject('config') private config: PixelConfiguration,\n    @Inject(DOCUMENT) private injectedDocument: any,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private router: Router,\n    private rendererFactory: RendererFactory2\n  ) {\n\n    // DOCUMENT cannot be injected directly as Document type, see https://github.com/angular/angular/issues/20351\n    // It is therefore injected as any and then cast to Document\n    this.doc = injectedDocument as Document;\n    this.renderer = rendererFactory.createRenderer(null, null);\n\n    if (router) {\n      // Log page views after router navigation ends\n      router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n\n        if (this.isLoaded()) {\n          this.track('PageView');\n        }\n\n      });\n    }\n\n  }\n\n  /**\n   * Initialize the Pixel tracking script\n   * - Adds the script to page's head\n   * - Tracks first page view\n   */\n  initialize(pixelId = this.config.pixelId): void {\n    if (this.isLoaded()) {\n      console.warn('Tried to initialize a Pixel instance while another is already active. Please call `remove()` before initializing a new instance.');\n      return;\n    }\n    this.config.enabled = true;\n    this.addPixelScript(pixelId);\n  }\n\n  /** Remove the Pixel tracking script */\n  remove(): void {\n    this.removePixelScript();\n    this.config.enabled = false;\n  }\n\n  /**\n   * Track a Standard Event as predefined by Facebook\n   *\n   * See {@link https://developers.facebook.com/docs/facebook-pixel/reference Facebook Pixel docs - reference}\n   * @param eventName The name of the event that is being tracked\n   * @param properties Optional properties of the event\n   */\n  track(\n    eventName: PixelEventName,\n    properties?: PixelEventProperties\n  ): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    if (!this.isLoaded()) {\n      console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n      return;\n    }\n\n    if (properties) {\n      fbq('track', eventName, properties);\n    } else {\n      fbq('track', eventName);\n    }\n\n  }\n\n  /**\n   * Track a custom Event\n   *\n   * See {@link https://developers.facebook.com/docs/facebook-pixel/implementation/conversion-tracking#custom-conversions Facebook Pixel docs - custom conversions}\n   * @param eventName The name of the event that is being tracked\n   * @param properties Optional properties of the event\n   */\n  trackCustom(eventName: string, properties?: object): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    if (!this.isLoaded()) {\n      console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n      return;\n    }\n\n    if (properties) {\n      fbq('trackCustom', eventName, properties);\n    } else {\n      fbq('trackCustom', eventName);\n    }\n  }\n\n  /**\n   * Adds the Facebook Pixel tracking script to the application\n   * @param pixelId The Facebook Pixel ID to use\n   */\n  private addPixelScript(pixelId: string): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const pixelCode = `\n    var pixelCode = function(f,b,e,v,n,t,s)\n    {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n    n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n    if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n    n.queue=[];t=b.createElement(e);t.async=!0;\n    t.src=v;s=b.getElementsByTagName(e)[0];\n    s.parentNode.insertBefore(t,s)}(window, document,'script',\n    'https://connect.facebook.net/en_US/fbevents.js');\n    fbq('init', '${pixelId}');\n    fbq('track', 'PageView');`;\n\n\n    const scriptElement = this.renderer.createElement('script');\n    this.renderer.setAttribute(scriptElement, 'id', 'pixel-script');\n    this.renderer.setAttribute(scriptElement, 'type', 'text/javascript');\n    this.renderer.setProperty(scriptElement, 'innerHTML', pixelCode);\n    this.renderer.appendChild(this.doc.head, scriptElement);\n  }\n\n  /** Remove Facebook Pixel tracking script from the application */\n  private removePixelScript(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const pixelElement = this.doc.getElementById('pixel-script');\n    if (pixelElement) {\n      pixelElement.remove();\n    }\n  }\n\n  /** Checks if the script element is present */\n  private isLoaded(): boolean {\n    if (isPlatformBrowser(this.platformId)) {\n      const pixelElement = this.doc.getElementById('pixel-script');\n      return !!pixelElement;\n    }\n    return false;\n  }\n\n}\n","import { PixelConfiguration } from './pixel.models';\nimport { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PixelService } from './pixel.service';\n\n@NgModule({\n  imports: [],\n})\nexport class PixelModule {\n\n  private static config: PixelConfiguration | null = null;\n\n  constructor(\n    private pixel: PixelService,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (!PixelModule.config) {\n      throw Error('ngx-pixel not configured correctly. Pass the `pixelId` property to the `forRoot()` function');\n    }\n    if (PixelModule.config.enabled && isPlatformBrowser(platformId)) {\n      this.pixel.initialize();\n    }\n  }\n\n  /**\n   * Initiale the Facebook Pixel Module\n   *\n   * Add your Pixel ID as parameter\n   */\n  static forRoot(config: PixelConfiguration): ModuleWithProviders<PixelModule> {\n    this.config = config;\n    const pixelId = config.pixelId;\n    this.verifyPixelId(pixelId);\n\n    return {\n      ngModule: PixelModule,\n      providers: [PixelService, { provide: 'config', useValue: config }]\n    };\n  }\n\n  /**\n   * Verifies the Pixel ID that was passed into the configuration.\n   * - Checks if Pixel was initialized\n   * @param pixelId Pixel ID to verify\n   */\n  private static verifyPixelId(pixelId: string): void {\n    // Have to verify first that all Pixel IDs follow the same 15 digit format\n    if (pixelId === null || pixelId === undefined || pixelId.length === 0) {\n      throw Error('Invalid Facebook Pixel ID. Did you pass the ID into the forRoot() function?');\n    }\n  }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\nclass PixelService {\n    constructor(config, injectedDocument, platformId, router, rendererFactory) {\n        this.config = config;\n        this.injectedDocument = injectedDocument;\n        this.platformId = platformId;\n        this.router = router;\n        this.rendererFactory = rendererFactory;\n        // DOCUMENT cannot be injected directly as Document type, see https://github.com/angular/angular/issues/20351\n        // It is therefore injected as any and then cast to Document\n        this.doc = injectedDocument;\n        this.renderer = rendererFactory.createRenderer(null, null);\n        if (router) {\n            // Log page views after router navigation ends\n            router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n                if (this.isLoaded()) {\n                    this.track('PageView');\n                }\n            });\n        }\n    }\n    /**\n     * Initialize the Pixel tracking script\n     * - Adds the script to page's head\n     * - Tracks first page view\n     */\n    initialize(pixelId = this.config.pixelId) {\n        if (this.isLoaded()) {\n            console.warn('Tried to initialize a Pixel instance while another is already active. Please call `remove()` before initializing a new instance.');\n            return;\n        }\n        this.config.enabled = true;\n        this.addPixelScript(pixelId);\n    }\n    /** Remove the Pixel tracking script */\n    remove() {\n        this.removePixelScript();\n        this.config.enabled = false;\n    }\n    /**\n     * Track a Standard Event as predefined by Facebook\n     *\n     * See {@link https://developers.facebook.com/docs/facebook-pixel/reference Facebook Pixel docs - reference}\n     * @param eventName The name of the event that is being tracked\n     * @param properties Optional properties of the event\n     */\n    track(eventName, properties) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        if (!this.isLoaded()) {\n            console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n            return;\n        }\n        if (properties) {\n            fbq('track', eventName, properties);\n        }\n        else {\n            fbq('track', eventName);\n        }\n    }\n    /**\n     * Track a custom Event\n     *\n     * See {@link https://developers.facebook.com/docs/facebook-pixel/implementation/conversion-tracking#custom-conversions Facebook Pixel docs - custom conversions}\n     * @param eventName The name of the event that is being tracked\n     * @param properties Optional properties of the event\n     */\n    trackCustom(eventName, properties) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        if (!this.isLoaded()) {\n            console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n            return;\n        }\n        if (properties) {\n            fbq('trackCustom', eventName, properties);\n        }\n        else {\n            fbq('trackCustom', eventName);\n        }\n    }\n    /**\n     * Adds the Facebook Pixel tracking script to the application\n     * @param pixelId The Facebook Pixel ID to use\n     */\n    addPixelScript(pixelId) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const pixelCode = `\n    var pixelCode = function(f,b,e,v,n,t,s)\n    {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n    n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n    if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n    n.queue=[];t=b.createElement(e);t.async=!0;\n    t.src=v;s=b.getElementsByTagName(e)[0];\n    s.parentNode.insertBefore(t,s)}(window, document,'script',\n    'https://connect.facebook.net/en_US/fbevents.js');\n    fbq('init', '${pixelId}');\n    fbq('track', 'PageView');`;\n        const scriptElement = this.renderer.createElement('script');\n        this.renderer.setAttribute(scriptElement, 'id', 'pixel-script');\n        this.renderer.setAttribute(scriptElement, 'type', 'text/javascript');\n        this.renderer.setProperty(scriptElement, 'innerHTML', pixelCode);\n        this.renderer.appendChild(this.doc.head, scriptElement);\n    }\n    /** Remove Facebook Pixel tracking script from the application */\n    removePixelScript() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const pixelElement = this.doc.getElementById('pixel-script');\n        if (pixelElement) {\n            pixelElement.remove();\n        }\n    }\n    /** Checks if the script element is present */\n    isLoaded() {\n        if (isPlatformBrowser(this.platformId)) {\n            const pixelElement = this.doc.getElementById('pixel-script');\n            return !!pixelElement;\n        }\n        return false;\n    }\n}\nPixelService.ɵfac = function PixelService_Factory(t) { return new (t || PixelService)(i0.ɵɵinject('config'), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i1.Router, 8), i0.ɵɵinject(i0.RendererFactory2)); };\nPixelService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PixelService, factory: PixelService.ɵfac, providedIn: 'root' });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PixelService, [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: ['config']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i1.Router, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.RendererFactory2 }];\n    }, null);\n})();\n\nclass PixelModule {\n    constructor(pixel, platformId) {\n        this.pixel = pixel;\n        if (!PixelModule.config) {\n            throw Error('ngx-pixel not configured correctly. Pass the `pixelId` property to the `forRoot()` function');\n        }\n        if (PixelModule.config.enabled && isPlatformBrowser(platformId)) {\n            this.pixel.initialize();\n        }\n    }\n    /**\n     * Initiale the Facebook Pixel Module\n     *\n     * Add your Pixel ID as parameter\n     */\n    static forRoot(config) {\n        this.config = config;\n        const pixelId = config.pixelId;\n        this.verifyPixelId(pixelId);\n        return {\n            ngModule: PixelModule,\n            providers: [PixelService, { provide: 'config', useValue: config }]\n        };\n    }\n    /**\n     * Verifies the Pixel ID that was passed into the configuration.\n     * - Checks if Pixel was initialized\n     * @param pixelId Pixel ID to verify\n     */\n    static verifyPixelId(pixelId) {\n        // Have to verify first that all Pixel IDs follow the same 15 digit format\n        if (pixelId === null || pixelId === undefined || pixelId.length === 0) {\n            throw Error('Invalid Facebook Pixel ID. Did you pass the ID into the forRoot() function?');\n        }\n    }\n}\nPixelModule.config = null;\nPixelModule.ɵfac = function PixelModule_Factory(t) { return new (t || PixelModule)(i0.ɵɵinject(PixelService), i0.ɵɵinject(PLATFORM_ID)); };\nPixelModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PixelModule });\nPixelModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [[]] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PixelModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                }]\n        }], function () {\n        return [{ type: PixelService }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PixelModule, PixelService };\n//# sourceMappingURL=ngx-pixel.mjs.map\n","map":{"version":3,"file":"ngx-pixel.mjs","sources":["../../../projects/pixel/src/lib/pixel.service.ts","../../../projects/pixel/src/lib/pixel.module.ts","../../../projects/pixel/src/ngx-pixel.ts"],"sourcesContent":["import { PixelEventName, PixelConfiguration, PixelEventProperties } from './pixel.models';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, RendererFactory2 } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\ndeclare const fbq: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PixelService {\n\n  private doc: Document;\n  private renderer: Renderer2\n\n  constructor(\n    @Inject('config') private config: PixelConfiguration,\n    @Inject(DOCUMENT) private injectedDocument: any,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private router: Router,\n    private rendererFactory: RendererFactory2\n  ) {\n\n    // DOCUMENT cannot be injected directly as Document type, see https://github.com/angular/angular/issues/20351\n    // It is therefore injected as any and then cast to Document\n    this.doc = injectedDocument as Document;\n    this.renderer = rendererFactory.createRenderer(null, null);\n\n    if (router) {\n      // Log page views after router navigation ends\n      router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n\n        if (this.isLoaded()) {\n          this.track('PageView');\n        }\n\n      });\n    }\n\n  }\n\n  /**\n   * Initialize the Pixel tracking script\n   * - Adds the script to page's head\n   * - Tracks first page view\n   */\n  initialize(pixelId = this.config.pixelId): void {\n    if (this.isLoaded()) {\n      console.warn('Tried to initialize a Pixel instance while another is already active. Please call `remove()` before initializing a new instance.');\n      return;\n    }\n    this.config.enabled = true;\n    this.addPixelScript(pixelId);\n  }\n\n  /** Remove the Pixel tracking script */\n  remove(): void {\n    this.removePixelScript();\n    this.config.enabled = false;\n  }\n\n  /**\n   * Track a Standard Event as predefined by Facebook\n   *\n   * See {@link https://developers.facebook.com/docs/facebook-pixel/reference Facebook Pixel docs - reference}\n   * @param eventName The name of the event that is being tracked\n   * @param properties Optional properties of the event\n   */\n  track(\n    eventName: PixelEventName,\n    properties?: PixelEventProperties\n  ): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    if (!this.isLoaded()) {\n      console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n      return;\n    }\n\n    if (properties) {\n      fbq('track', eventName, properties);\n    } else {\n      fbq('track', eventName);\n    }\n\n  }\n\n  /**\n   * Track a custom Event\n   *\n   * See {@link https://developers.facebook.com/docs/facebook-pixel/implementation/conversion-tracking#custom-conversions Facebook Pixel docs - custom conversions}\n   * @param eventName The name of the event that is being tracked\n   * @param properties Optional properties of the event\n   */\n  trackCustom(eventName: string, properties?: object): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    if (!this.isLoaded()) {\n      console.warn('Tried to track an event without initializing a Pixel instance. Call `initialize()` first.');\n      return;\n    }\n\n    if (properties) {\n      fbq('trackCustom', eventName, properties);\n    } else {\n      fbq('trackCustom', eventName);\n    }\n  }\n\n  /**\n   * Adds the Facebook Pixel tracking script to the application\n   * @param pixelId The Facebook Pixel ID to use\n   */\n  private addPixelScript(pixelId: string): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const pixelCode = `\n    var pixelCode = function(f,b,e,v,n,t,s)\n    {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n    n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n    if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n    n.queue=[];t=b.createElement(e);t.async=!0;\n    t.src=v;s=b.getElementsByTagName(e)[0];\n    s.parentNode.insertBefore(t,s)}(window, document,'script',\n    'https://connect.facebook.net/en_US/fbevents.js');\n    fbq('init', '${pixelId}');\n    fbq('track', 'PageView');`;\n\n\n    const scriptElement = this.renderer.createElement('script');\n    this.renderer.setAttribute(scriptElement, 'id', 'pixel-script');\n    this.renderer.setAttribute(scriptElement, 'type', 'text/javascript');\n    this.renderer.setProperty(scriptElement, 'innerHTML', pixelCode);\n    this.renderer.appendChild(this.doc.head, scriptElement);\n  }\n\n  /** Remove Facebook Pixel tracking script from the application */\n  private removePixelScript(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const pixelElement = this.doc.getElementById('pixel-script');\n    if (pixelElement) {\n      pixelElement.remove();\n    }\n  }\n\n  /** Checks if the script element is present */\n  private isLoaded(): boolean {\n    if (isPlatformBrowser(this.platformId)) {\n      const pixelElement = this.doc.getElementById('pixel-script');\n      return !!pixelElement;\n    }\n    return false;\n  }\n\n}\n","import { PixelConfiguration } from './pixel.models';\nimport { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PixelService } from './pixel.service';\n\n@NgModule({\n  imports: [],\n})\nexport class PixelModule {\n\n  private static config: PixelConfiguration | null = null;\n\n  constructor(\n    private pixel: PixelService,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (!PixelModule.config) {\n      throw Error('ngx-pixel not configured correctly. Pass the `pixelId` property to the `forRoot()` function');\n    }\n    if (PixelModule.config.enabled && isPlatformBrowser(platformId)) {\n      this.pixel.initialize();\n    }\n  }\n\n  /**\n   * Initiale the Facebook Pixel Module\n   *\n   * Add your Pixel ID as parameter\n   */\n  static forRoot(config: PixelConfiguration): ModuleWithProviders<PixelModule> {\n    this.config = config;\n    const pixelId = config.pixelId;\n    this.verifyPixelId(pixelId);\n\n    return {\n      ngModule: PixelModule,\n      providers: [PixelService, { provide: 'config', useValue: config }]\n    };\n  }\n\n  /**\n   * Verifies the Pixel ID that was passed into the configuration.\n   * - Checks if Pixel was initialized\n   * @param pixelId Pixel ID to verify\n   */\n  private static verifyPixelId(pixelId: string): void {\n    // Have to verify first that all Pixel IDs follow the same 15 digit format\n    if (pixelId === null || pixelId === undefined || pixelId.length === 0) {\n      throw Error('Invalid Facebook Pixel ID. Did you pass the ID into the forRoot() function?');\n    }\n  }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;MAWa,YAAY,CAAA;IAKvB,WAC4B,CAAA,MAA0B,EAC1B,gBAAqB,EAClB,UAAkB,EAC3B,MAAc,EAC1B,eAAiC,EAAA;AAJf,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAoB;AAC1B,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAK;AAClB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAQ;AAC3B,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AAC1B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAkB;;;AAKzC,QAAA,IAAI,CAAC,GAAG,GAAG,gBAA4B,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAE3D,QAAA,IAAI,MAAM,EAAE;;YAEV,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,YAAY,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,IAAG;AAEpF,gBAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;AACnB,oBAAA,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACxB,iBAAA;AAEH,aAAC,CAAC,CAAC;AACJ,SAAA;KAEF;AAED;;;;AAIG;AACH,IAAA,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAA;AACtC,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;AACnB,YAAA,OAAO,CAAC,IAAI,CAAC,kIAAkI,CAAC,CAAC;YACjJ,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KAC9B;;IAGD,MAAM,GAAA;QACJ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;KAC7B;AAED;;;;;;AAMG;IACH,KAAK,CACH,SAAyB,EACzB,UAAiC,EAAA;AAEjC,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACvC,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;AACpB,YAAA,OAAO,CAAC,IAAI,CAAC,2FAA2F,CAAC,CAAC;YAC1G,OAAO;AACR,SAAA;AAED,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AACrC,SAAA;AAAM,aAAA;AACL,YAAA,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACzB,SAAA;KAEF;AAED;;;;;;AAMG;IACH,WAAW,CAAC,SAAiB,EAAE,UAAmB,EAAA;AAChD,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACvC,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;AACpB,YAAA,OAAO,CAAC,IAAI,CAAC,2FAA2F,CAAC,CAAC;YAC1G,OAAO;AACR,SAAA;AAED,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,GAAG,CAAC,aAAa,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AAC3C,SAAA;AAAM,aAAA;AACL,YAAA,GAAG,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;AAC/B,SAAA;KACF;AAED;;;AAGG;AACK,IAAA,cAAc,CAAC,OAAe,EAAA;AACpC,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACvC,OAAO;AACR,SAAA;AAED,QAAA,MAAM,SAAS,GAAG,CAAA;;;;;;;;;mBASH,OAAO,CAAA;8BACI,CAAC;QAG3B,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,EAAE,iBAAiB,CAAC,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;AACjE,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;KACzD;;IAGO,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACvC,OAAO;AACR,SAAA;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;AAC7D,QAAA,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,MAAM,EAAE,CAAC;AACvB,SAAA;KACF;;IAGO,QAAQ,GAAA;AACd,QAAA,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YAC7D,OAAO,CAAC,CAAC,YAAY,CAAC;AACvB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;;AAtJU,YAAA,CAAA,IAAA,GAAA,SAAA,oBAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,YAAY,EAMb,EAAA,CAAA,QAAA,CAAA,QAAQ,CACR,EAAA,EAAA,CAAA,QAAA,CAAA,QAAQ,eACR,WAAW,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;kEARV,YAAY,EAAA,OAAA,EAAZ,YAAY,CAAA,IAAA,EAAA,UAAA,EAFX,MAAM,EAAA,CAAA,CAAA;;4EAEP,YAAY,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAOI,MAAM;+BAAC,QAAQ,CAAA;;8BACf,MAAM;+BAAC,QAAQ,CAAA;kCACyB,MAAM,EAAA,UAAA,EAAA,CAAA;8BAA9C,MAAM;+BAAC,WAAW,CAAA;;8BAClB,QAAQ;;;;;MCZA,WAAW,CAAA;IAItB,WACU,CAAA,KAAmB,EACN,UAAkB,EAAA;AAD/B,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAAc;AAG3B,QAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AACvB,YAAA,MAAM,KAAK,CAAC,6FAA6F,CAAC,CAAC;AAC5G,SAAA;QACD,IAAI,WAAW,CAAC,MAAM,CAAC,OAAO,IAAI,iBAAiB,CAAC,UAAU,CAAC,EAAE;AAC/D,YAAA,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;AACzB,SAAA;KACF;AAED;;;;AAIG;IACH,OAAO,OAAO,CAAC,MAA0B,EAAA;AACvC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE5B,OAAO;AACL,YAAA,QAAQ,EAAE,WAAW;AACrB,YAAA,SAAS,EAAE,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;SACnE,CAAC;KACH;AAED;;;;AAIG;IACK,OAAO,aAAa,CAAC,OAAe,EAAA;;AAE1C,QAAA,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACrE,YAAA,MAAM,KAAK,CAAC,6EAA6E,CAAC,CAAC;AAC5F,SAAA;KACF;;AAxCc,WAAM,CAAA,MAAA,GAA8B,IAAK,CAAA;AAF7C,WAAA,CAAA,IAAA,GAAA,SAAA,mBAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,WAAW,yCAMZ,WAAW,CAAA,CAAA,CAAA,EAAA,CAAA;6DANV,WAAW,EAAA,CAAA,CAAA;iEAFb,EAAE,CAAA,EAAA,CAAA,CAAA;;4EAEA,WAAW,EAAA,CAAA;kBAHvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,EAAE;iBACZ,CAAA;;gDAOoC,MAAM,EAAA,UAAA,EAAA,CAAA;8BAAtC,MAAM;+BAAC,WAAW,CAAA;;;;;ACdvB;;AAEG;;;;"}}}